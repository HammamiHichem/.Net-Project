@model List<DreamParadise.Models.Rating>
@{
    ViewData["Title"] = "Rate Our Hotel";
    // Calculate average rating
    var averageRating = Model != null && Model.Any() ? Model.Select(r => r.RatingService).Average() : 0;

    var ratingTable = new Dictionary<int, int>
    {
        {1, 0},
        {2, 0},
        {3, 0},
        {4, 0},
        {5, 0}
    };
    
    int sumOfRatings = 0;
    int ratingNb = 0;
    
    foreach (var rating in Model)
    {
        switch (rating.RatingService)
        {
            case 1:
                ratingTable[1]++;
                break;
            case 2:
                ratingTable[2]++;
                break;
            case 3:
                ratingTable[3]++;
                break;
            case 4:
                ratingTable[4]++;
                break;
            case 5:
                ratingTable[5]++;
                break;
        }

        sumOfRatings += rating.RatingService;
        ratingNb++;
    }

    double moy = ratingNb > 0 ? (double)sumOfRatings / ratingNb : 0;
}

<link rel="stylesheet" href="~/css/RateHotel.css">

<h2 class="text-center mb-4">Rate Our Hotel</h2>
<form method="post" asp-action="RateHotel">
    <div class="rating">
        <label class="star">
            <input type="radio" name="RatingService" value="1" />
            <span class="icon">★</span>
        </label>
        <label class="star">
            <input type="radio" name="RatingService" value="2" />
            <span class="icon">★</span>
            <span class="icon">★</span>
        </label>
        <label class="star">
            <input type="radio" name="RatingService" value="3" />
            <span class="icon">★</span>
            <span class="icon">★</span>
            <span class="icon">★</span>
        </label>
        <label class="star">
            <input type="radio" name="RatingService" value="4" />
            <span class="icon">★</span>
            <span class="icon">★</span>
            <span class="icon">★</span>
            <span class="icon">★</span>
        </label>
        <label class="star">
            <input type="radio" name="RatingService" value="5" />
            <span class="icon">★</span>
            <span class="icon">★</span>
            <span class="icon">★</span>
            <span class="icon">★</span>
            <span class="icon">★</span>
        </label>
    </div>

    <div class="mb-3">
        <label for="suggestion" class="form-label">Suggestion:</label>
        <textarea id="suggestion" name="Suggestion" required class="form-control"></textarea>
    </div>
    <div class="mb-3">
        <label for="firstName" class="form-label">First Name:</label>
        <input type="text" id="firstName" name="FirstName" required class="form-control" />
    </div>
    <div class="mb-3">
        <label for="lastName" class="form-label">Last Name:</label>
        <input type="text" id="lastName" name="LastName" required class="form-control" />
    </div>
    <button type="submit" class="my-submit-button">Submit</button>
</form>

<hr>

<h2 class="text-center mb-4">Our Statistics</h2>
<div class="container mt-5">
    <div class="row align-items-center">
        <div class="col-md-6">
            <div class="card border-danger shadow">
                <div class="card-body d-flex flex-column justify-content-center align-items-center">
                    <p class="card-text h3 mb-0">Average Rating: <span class="h2 mb-0 text-danger">@moy.ToString("0.00") out of 5</span></p>
                </div>
            </div>
        </div>
      
        <div class="col-md-6">
            <canvas id="ratingChart"></canvas>
        </div>
    </div>
</div>

<hr>

<h2 class="text-center mb-4">All Ratings and Suggestions</h2>

@if (Model?.Any() ?? false)
{
    <div class="table-responsive">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th style="width: 30%;">Client</th>
                    <th style="width: 50%;">Suggestion</th>
                    <th style="width: 20%;">Rating</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var rating in Model)
                {
                    <tr>
                        <td>@rating.FirstName @rating.LastName</td>
                        <td>@rating.Suggestion</td>
                        <td>
                            @for (int i = 1; i <= rating.RatingService; i++)
                            {
                                <span class="icon-bleu">★</span>
                            }
                            @for (int j = 1; j <= 5 - rating.RatingService; j++)
                            {
                                <span class="star-black">&#9733;</span>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <p>No ratings available.</p>
}

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.0/chart.min.js"></script>
    <script>
        $(document).ready(function () {
            var ctx = document.getElementById('ratingChart').getContext('2d');
            var myChart = new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: ['1 star', '2 stars', '3 stars', '4 stars', '5 stars'],
                    datasets: [{
                        label: 'Percentage of Ratings',
                        data: [@ratingTable[1], @ratingTable[2], @ratingTable[3], @ratingTable[4], @ratingTable[5]],
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.8)',
                            'rgba(54, 162, 235, 0.8)',
                            'rgba(255, 206, 86, 0.8)',
                            'rgba(75, 192, 192, 0.8)',
                            'rgba(153, 102, 255, 0.8)'
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'top',
                        },
                        tooltip: {
                            callbacks: {
                                label: function(tooltipItem) {
                                    return tooltipItem.label + ': ' + tooltipItem.raw.toFixed(2) + '%';
                                }
                            }
                        }
                    }
                }
            });
        });
    </script>
}
